-- start_ignore
-- end_ignore
-- prepare a distributed table
drop table if exists t;
psql:/path/sql_file:1: NOTICE:  table "t" does not exist, skipping
DROP TABLE
create table t as select i as id from generate_series(1,8) i; 
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'id' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
SELECT 8
create or replace function foo() returns void as $$
begin
    EXECUTE 'SELECT row(id, 2) from t';
    RETURN;
end
$$ language 'plpgsql';
CREATE FUNCTION
select foo(); 
 foo 
-----
 
(1 row)

-- cleanup
drop function foo();
DROP FUNCTION
drop table t;
DROP TABLE
