drop table if exists smallt;
NOTICE:  table "smallt" does not exist, skipping
create table smallt (i int, t text, d date) distributed by (i);
insert into smallt select i%10, 'text ' || (i%15), '2011-01-01'::date + ((i%20) || ' days')::interval
from generate_series(0, 99) i;
drop table if exists bigt;
NOTICE:  table "bigt" does not exist, skipping
create table bigt (i int, t text, d date) distributed by (i);
insert into bigt select i/10, 'text ' || (i/15), '2011-01-01'::date + ((i/20) || ' days')::interval
from generate_series(0, 999999) i;
drop table if exists smallt2;
NOTICE:  table "smallt2" does not exist, skipping
create table smallt2 (i int, t text, d date) distributed by (i);
insert into smallt2 select i%5, 'text ' || (i%10), '2011-01-01'::date + ((i%15) || ' days')::interval
from generate_series(0, 49) i;
set optimizer_segments = 3;
-- HashAgg, Agg
select d, count(*) from smallt group by d;
     d      | count 
------------+-------
 01-13-2011 |     5
 01-11-2011 |     5
 01-03-2011 |     5
 01-09-2011 |     5
 01-15-2011 |     5
 01-07-2011 |     5
 01-01-2011 |     5
 01-05-2011 |     5
 01-19-2011 |     5
 01-17-2011 |     5
 01-12-2011 |     5
 01-08-2011 |     5
 01-10-2011 |     5
 01-14-2011 |     5
 01-20-2011 |     5
 01-18-2011 |     5
 01-04-2011 |     5
 01-02-2011 |     5
 01-16-2011 |     5
 01-06-2011 |     5
(20 rows)

explain analyze select d, count(*) from smallt group by d;
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=0.00..431.01 rows=20 width=12)
   Rows out:  20 rows at destination with 6.808 ms to first row, 7.036 ms to end, start offset by 0.391 ms.
   ->  HashAggregate  (cost=0.00..431.01 rows=10 width=12)
         Group By: d
         Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 4.108 ms to first row, 6.248 ms to end, start offset by 0.820 ms.
         Executor memory:  6233K bytes avg, 6233K bytes max (seg0).
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..431.01 rows=10 width=12)
               Hash Key: d
               Rows out:  Avg 10.0 rows x 2 workers at destination.  Max 10 rows (seg0) with 0.017 ms to first row, 0.021 ms to end, start offset by 3.534 ms.
               ->  Result  (cost=0.00..431.01 rows=10 width=12)
                     Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.168 ms to first row, 0.197 ms to end, start offset by 2.379 ms.
                     ->  GroupAggregate  (cost=0.00..431.01 rows=10 width=12)
                           Group By: d
                           Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.167 ms to first row, 0.193 ms to end, start offset by 2.379 ms.
                           ->  Sort  (cost=0.00..431.00 rows=50 width=4)
                                 Sort Key: d
                                 Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.160 ms to first row, 0.169 ms to end, start offset by 2.380 ms.
                                 Executor memory:  29K bytes avg, 29K bytes max (seg0).
                                 Work_mem used:  29K bytes avg, 29K bytes max (seg0). Workfile: (0 spilling, 0 reused)
                                 ->  Table Scan on smallt  (cost=0.00..431.00 rows=50 width=4)
                                       Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.076 ms to first row, 0.093 ms to end, start offset by 2.396 ms.
 Slice statistics:
   (slice0)    Executor memory: 159K bytes.
   (slice1)    Executor memory: 195K bytes avg x 2 workers, 195K bytes max (seg0).  Work_mem: 29K bytes max.
   (slice2)    Executor memory: 6401K bytes avg x 2 workers, 6403K bytes max (seg0).
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  optimizer=on; optimizer_segments=3
 Optimizer status: PQO version 1.611
 Total runtime: 7.838 ms
(30 rows)

set statement_mem=2560;
select count(*) from (select i, t, d, count(*) from bigt group by i, t, d) tmp;
 count  
--------
 133333
(1 row)

explain analyze select count(*) from (select i, t, d, count(*) from bigt group by i, t, d) tmp;
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=0.00..571.42 rows=1 width=8)
   Rows out:  1 rows with 684 ms to end, start offset by 0.344 ms.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..571.42 rows=1 width=8)
         Rows out:  2 rows at destination with 684 ms to end, start offset by 0.344 ms.
         ->  Aggregate  (cost=0.00..571.42 rows=1 width=8)
               Rows out:  Avg 1.0 rows x 2 workers.  Max 1 rows (seg0) with 683 ms to end, start offset by 0.756 ms.
               ->  HashAggregate  (cost=0.00..571.42 rows=500588 width=1)
                     Group By: i, t, d
                     Rows out:  Avg 66666.5 rows x 2 workers.  Max 66668 rows (seg1) with 614 ms to first row, 670 ms to end, start offset by 0.759 ms.
                     Executor memory:  2826K bytes avg, 2826K bytes max (seg0).
                     Work_mem used:  2460K bytes avg, 2461K bytes max (seg1). Workfile: (2 spilling, 0 reused)
                     Work_mem wanted: 4371K bytes avg, 4371K bytes max (seg1) to lessen workfile I/O affecting 2 workers.
                     (seg1)   66668 groups total in 32 batches; 1 overflows; 66668 spill groups.
                     (seg1)   Hash chain length 1.3 avg, 8 max, using 89263 of 1081344 buckets.
                     ->  Table Scan on bigt  (cost=0.00..439.81 rows=500588 width=18)
                           Rows out:  Avg 500000.0 rows x 2 workers.  Max 500000 rows (seg0) with 0.036 ms to first row, 68 ms to end, start offset by 0.833 ms.
 Slice statistics:
   (slice0)    Executor memory: 159K bytes.
   (slice1)  * Executor memory: 2984K bytes avg x 2 workers, 2984K bytes max (seg0).  Work_mem: 2461K bytes max, 4371K bytes wanted.
 Statement statistics:
   Memory used: 2560K bytes
   Memory wanted: 4770K bytes
 Settings:  optimizer=on; optimizer_segments=3
 Optimizer status: PQO version 1.611
 Total runtime: 684.767 ms
(25 rows)

set statement_mem=128000;
-- DQA
set gp_enable_agg_distinct=off;
set gp_eager_one_phase_agg=on;
select count(distinct d) from smallt;
 count 
-------
    20
(1 row)

explain analyze select count(distinct d) from smallt;
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=0.00..431.01 rows=1 width=8)
   Rows out:  1 rows with 1.020 ms to end, start offset by 0.328 ms.
   ->  Gather Motion 2:1  (slice2; segments: 2)  (cost=0.00..431.01 rows=20 width=4)
         Rows out:  20 rows at destination with 0.985 ms to first row, 1.007 ms to end, start offset by 0.328 ms.
         ->  GroupAggregate  (cost=0.00..431.01 rows=10 width=4)
               Group By: d
               Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.517 ms to first row, 0.525 ms to end, start offset by 0.693 ms.
               ->  Sort  (cost=0.00..431.01 rows=10 width=4)
                     Sort Key: d
                     Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.514 ms to first row, 0.515 ms to end, start offset by 0.693 ms.
                     Executor memory:  29K bytes avg, 29K bytes max (seg0).
                     Work_mem used:  29K bytes avg, 29K bytes max (seg0). Workfile: (0 spilling, 0 reused)
                     ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..431.01 rows=10 width=4)
                           Hash Key: d
                           Rows out:  Avg 10.0 rows x 2 workers at destination.  Max 10 rows (seg0) with 0.471 ms to first row, 0.475 ms to end, start offset by 0.721 ms.
                           ->  GroupAggregate  (cost=0.00..431.01 rows=10 width=4)
                                 Group By: d
                                 Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.154 ms to first row, 0.177 ms to end, start offset by 0.882 ms.
                                 ->  Sort  (cost=0.00..431.00 rows=50 width=4)
                                       Sort Key: d
                                       Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.148 ms to first row, 0.157 ms to end, start offset by 0.882 ms.
                                       Executor memory:  29K bytes avg, 29K bytes max (seg0).
                                       Work_mem used:  29K bytes avg, 29K bytes max (seg0). Workfile: (0 spilling, 0 reused)
                                       ->  Table Scan on smallt  (cost=0.00..431.00 rows=50 width=4)
                                             Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.077 ms to first row, 0.096 ms to end, start offset by 0.898 ms.
 Slice statistics:
   (slice0)    Executor memory: 159K bytes.
   (slice1)    Executor memory: 195K bytes avg x 2 workers, 195K bytes max (seg0).  Work_mem: 29K bytes max.
   (slice2)    Executor memory: 195K bytes avg x 2 workers, 195K bytes max (seg0).  Work_mem: 29K bytes max.
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  gp_enable_agg_distinct=off; optimizer=on; optimizer_segments=3
 Optimizer status: PQO version 1.611
 Total runtime: 1.764 ms
(34 rows)

set statement_mem=2560;
select count(distinct d) from bigt;
 count 
-------
 50000
(1 row)

explain analyze select count(distinct d) from bigt;
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=0.00..485.92 rows=1 width=8)
   Rows out:  1 rows with 1020 ms to end, start offset by 0.376 ms.
   ->  Gather Motion 2:1  (slice2; segments: 2)  (cost=0.00..485.90 rows=50333 width=4)
         Rows out:  50000 rows at destination with 949 ms to first row, 1005 ms to end, start offset by 0.377 ms.
         ->  HashAggregate  (cost=0.00..485.15 rows=25167 width=4)
               Group By: d
               Rows out:  Avg 25000.0 rows x 2 workers.  Max 25000 rows (seg0) with 948 ms to first row, 955 ms to end, start offset by 0.768 ms.
               Executor memory:  969K bytes avg, 969K bytes max (seg0).
               ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..483.09 rows=25167 width=4)
                     Hash Key: d
                     Rows out:  Avg 50000.0 rows x 2 workers at destination.  Max 50000 rows (seg0) with 667 ms to first row, 921 ms to end, start offset by 0.822 ms.
                     ->  HashAggregate  (cost=0.00..482.88 rows=25167 width=4)
                           Group By: d
                           Rows out:  Avg 50000.0 rows x 2 workers.  Max 50000 rows (seg0) with 665 ms to first row, 891 ms to end, start offset by 0.971 ms.
                           Executor memory:  1609K bytes avg, 1609K bytes max (seg0).
                           ->  Table Scan on bigt  (cost=0.00..439.81 rows=500588 width=4)
                                 Rows out:  Avg 500000.0 rows x 2 workers.  Max 500000 rows (seg0) with 0.080 ms to first row, 550 ms to end, start offset by 1.002 ms.
 Slice statistics:
   (slice0)    Executor memory: 267K bytes.
   (slice1)    Executor memory: 1807K bytes avg x 2 workers, 1807K bytes max (seg0).
   (slice2)    Executor memory: 1251K bytes avg x 2 workers, 1251K bytes max (seg0).
 Statement statistics:
   Memory used: 2560K bytes
 Settings:  gp_enable_agg_distinct=off; optimizer=on; optimizer_segments=3
 Optimizer status: PQO version 1.611
 Total runtime: 1020.891 ms
(26 rows)

set statement_mem=128000;
set gp_enable_agg_distinct=on;
set gp_eager_one_phase_agg=off;
-- Rescan on Agg (with Material in the inner side of nestloop)
-- start_ignore
-- Known_opt_diff: This test is only here for the planner. It doesn't exercise eagerfree in ORCA plans
-- end_ignore
set enable_nestloop=on;
set enable_hashjoin=off;
select t1.*, t2.* from
(select d, count(*) from smallt group by d) as t1, (select d, sum(i) from smallt group by d) as t2
where t1.d = t2.d;
     d      | count |     d      | sum 
------------+-------+------------+-----
 01-13-2011 |     5 | 01-13-2011 |  10
 01-11-2011 |     5 | 01-11-2011 |   0
 01-15-2011 |     5 | 01-15-2011 |  20
 01-07-2011 |     5 | 01-07-2011 |  30
 01-01-2011 |     5 | 01-01-2011 |   0
 01-03-2011 |     5 | 01-03-2011 |  10
 01-05-2011 |     5 | 01-05-2011 |  20
 01-09-2011 |     5 | 01-09-2011 |  40
 01-19-2011 |     5 | 01-19-2011 |  40
 01-17-2011 |     5 | 01-17-2011 |  30
 01-18-2011 |     5 | 01-18-2011 |  35
 01-12-2011 |     5 | 01-12-2011 |   5
 01-04-2011 |     5 | 01-04-2011 |  15
 01-08-2011 |     5 | 01-08-2011 |  35
 01-02-2011 |     5 | 01-02-2011 |   5
 01-10-2011 |     5 | 01-10-2011 |  45
 01-14-2011 |     5 | 01-14-2011 |  15
 01-16-2011 |     5 | 01-16-2011 |  25
 01-20-2011 |     5 | 01-20-2011 |  45
 01-06-2011 |     5 | 01-06-2011 |  25
(20 rows)

explain analyze select t1.*, t2.* from
(select d, count(*) from smallt group by d) as t1, (select d, sum(i) from smallt group by d) as t2
where t1.d = t2.d;
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=0.00..862.02 rows=20 width=24)
   Rows out:  20 rows at destination with 7.945 ms to first row, 7.965 ms to end, start offset by 0.521 ms.
   ->  Hash Join  (cost=0.00..862.02 rows=10 width=24)
         Hash Cond: public.smallt.d = public.smallt.d
         Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 5.770 ms to first row, 7.386 ms to end, start offset by 0.991 ms.
         Executor memory:  1K bytes avg, 1K bytes max (seg0).
         Work_mem used:  1K bytes avg, 1K bytes max (seg0). Workfile: (0 spilling, 0 reused)
         (seg0)   Hash chain length 1.0 avg, 1 max, using 10 of 131111 buckets.
         ->  HashAggregate  (cost=0.00..431.01 rows=10 width=12)
               Group By: public.smallt.d
               Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.915 ms to first row, 2.023 ms to end, start offset by 5.844 ms.
               Executor memory:  3161K bytes avg, 3161K bytes max (seg0).
               ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..431.01 rows=10 width=12)
                     Hash Key: public.smallt.d
                     Rows out:  Avg 10.0 rows x 2 workers at destination.  Max 10 rows (seg0) with 0.013 ms to end, start offset by 6.123 ms.
                     ->  Result  (cost=0.00..431.01 rows=10 width=12)
                           Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.210 ms to first row, 0.245 ms to end, start offset by 1.484 ms.
                           ->  GroupAggregate  (cost=0.00..431.01 rows=10 width=12)
                                 Group By: public.smallt.d
                                 Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.208 ms to first row, 0.239 ms to end, start offset by 1.485 ms.
                                 ->  Sort  (cost=0.00..431.00 rows=50 width=4)
                                       Sort Key: public.smallt.d
                                       Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.199 ms to first row, 0.214 ms to end, start offset by 1.485 ms.
                                       Executor memory:  29K bytes avg, 29K bytes max (seg0).
                                       Work_mem used:  29K bytes avg, 29K bytes max (seg0). Workfile: (0 spilling, 0 reused)
                                       ->  Table Scan on smallt  (cost=0.00..431.00 rows=50 width=4)
                                             Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.106 ms to first row, 0.124 ms to end, start offset by 1.515 ms.
         ->  Hash  (cost=431.01..431.01 rows=10 width=12)
               Rows in:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 4.617 ms to end, start offset by 1.227 ms.
               ->  HashAggregate  (cost=0.00..431.01 rows=10 width=12)
                     Group By: public.smallt.d
                     Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 3.671 ms to first row, 4.609 ms to end, start offset by 1.228 ms.
                     Executor memory:  3161K bytes avg, 3161K bytes max (seg0).
                     ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..431.01 rows=10 width=12)
                           Hash Key: public.smallt.d
                           Rows out:  Avg 10.0 rows x 2 workers at destination.  Max 10 rows (seg0) with 2.474 ms to first row, 2.479 ms to end, start offset by 1.691 ms.
                           ->  Result  (cost=0.00..431.01 rows=10 width=12)
                                 Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 1.329 ms to first row, 2.239 ms to end, start offset by 1.489 ms.
                                 ->  HashAggregate  (cost=0.00..431.01 rows=10 width=12)
                                       Group By: public.smallt.d
                                       Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 1.328 ms to first row, 2.235 ms to end, start offset by 1.489 ms.
                                       Executor memory:  3161K bytes avg, 3161K bytes max (seg0).
                                       ->  Table Scan on smallt  (cost=0.00..431.00 rows=50 width=8)
                                             Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.073 ms to first row, 0.090 ms to end, start offset by 1.913 ms.
 Slice statistics:
   (slice0)    Executor memory: 227K bytes.
   (slice1)    Executor memory: 263K bytes avg x 2 workers, 263K bytes max (seg0).  Work_mem: 29K bytes max.
   (slice2)    Executor memory: 3395K bytes avg x 2 workers, 3395K bytes max (seg0).
   (slice3)    Executor memory: 4963K bytes avg x 2 workers, 4963K bytes max (seg0).  Work_mem: 1K bytes max.
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_hashjoin=off; enable_nestloop=on; gp_enable_agg_distinct=on; optimizer=on; optimizer_segments=3
 Optimizer status: PQO version 1.611
 Total runtime: 8.997 ms
(54 rows)

set enable_nestloop=off;
set enable_hashjoin=on;
-- Rescan on Agg (with Material in the inner side of nestloop)
-- start_ignore
-- Known_opt_diff: This test is only here for the planner. It doesn't exercise eagerfree in ORCA plans
-- end_ignore
set enable_nestloop=on;
set enable_hashjoin=off;
select t1.*, t2.* from
(select i, count(*) from smallt group by i) as t1, (select i, sum(i) from smallt group by i) as t2
where t1.i = t2.i;
 i | count | i | sum 
---+-------+---+-----
 1 |    10 | 1 |  10
 3 |    10 | 3 |  30
 5 |    10 | 5 |  50
 7 |    10 | 7 |  70
 9 |    10 | 9 |  90
 0 |    10 | 0 |   0
 2 |    10 | 2 |  20
 4 |    10 | 4 |  40
 6 |    10 | 6 |  60
 8 |    10 | 8 |  80
(10 rows)

explain analyze select t1.*, t2.* from
(select i, count(*) from smallt group by i) as t1, (select i, sum(i) from smallt group by i) as t2
where t1.i = t2.i;
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..862.01 rows=10 width=24)
   Rows out:  10 rows at destination with 2.413 ms to first row, 2.421 ms to end, start offset by 0.437 ms.
   ->  Hash Join  (cost=0.00..862.01 rows=5 width=24)
         Hash Cond: public.smallt.i = public.smallt.i
         Rows out:  Avg 5.0 rows x 2 workers.  Max 5 rows (seg0) with 0.774 ms to first row, 1.886 ms to end, start offset by 0.907 ms.
         Executor memory:  1K bytes avg, 1K bytes max (seg0).
         Work_mem used:  1K bytes avg, 1K bytes max (seg0). Workfile: (0 spilling, 0 reused)
         (seg0)   Hash chain length 1.0 avg, 1 max, using 5 of 262151 buckets.
         ->  GroupAggregate  (cost=0.00..431.01 rows=5 width=12)
               Group By: public.smallt.i
               Rows out:  Avg 5.0 rows x 2 workers.  Max 5 rows (seg0) with 0.075 ms to first row, 0.101 ms to end, start offset by 1.604 ms.
               ->  Sort  (cost=0.00..431.00 rows=50 width=4)
                     Sort Key: public.smallt.i
                     Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.067 ms to first row, 0.080 ms to end, start offset by 1.604 ms.
                     Executor memory:  29K bytes avg, 29K bytes max (seg0).
                     Work_mem used:  29K bytes avg, 29K bytes max (seg0). Workfile: (0 spilling, 0 reused)
                     ->  Table Scan on smallt  (cost=0.00..431.00 rows=50 width=4)
                           Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.009 ms to first row, 0.024 ms to end, start offset by 1.618 ms.
         ->  Hash  (cost=431.01..431.01 rows=5 width=12)
               Rows in:  Avg 5.0 rows x 2 workers.  Max 5 rows (seg0) with 0.137 ms to end, start offset by 1.466 ms.
               ->  GroupAggregate  (cost=0.00..431.01 rows=5 width=12)
                     Group By: public.smallt.i
                     Rows out:  Avg 5.0 rows x 2 workers.  Max 5 rows (seg0) with 0.102 ms to first row, 0.133 ms to end, start offset by 1.466 ms.
                     ->  Sort  (cost=0.00..431.00 rows=50 width=4)
                           Sort Key: public.smallt.i
                           Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.090 ms to first row, 0.100 ms to end, start offset by 1.467 ms.
                           Executor memory:  29K bytes avg, 29K bytes max (seg0).
                           Work_mem used:  29K bytes avg, 29K bytes max (seg0). Workfile: (0 spilling, 0 reused)
                           ->  Table Scan on smallt  (cost=0.00..431.00 rows=50 width=4)
                                 Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.021 ms to first row, 0.041 ms to end, start offset by 1.486 ms.
 Slice statistics:
   (slice0)    Executor memory: 159K bytes.
   (slice1)    Executor memory: 3275K bytes avg x 2 workers, 3275K bytes max (seg0).  Work_mem: 29K bytes max.
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_hashjoin=off; enable_nestloop=on; gp_enable_agg_distinct=on; optimizer=on; optimizer_segments=3
 Optimizer status: PQO version 1.611
 Total runtime: 3.324 ms
(38 rows)

set enable_nestloop=off;
set enable_hashjoin=on;
-- Limit on Agg
select d, count(*) from smallt group by d limit 5; --ignore
     d      | count 
------------+-------
 01-12-2011 |     5
 01-08-2011 |     5
 01-10-2011 |     5
 01-14-2011 |     5
 01-20-2011 |     5
(5 rows)

explain analyze select d, count(*) from smallt group by d limit 5;
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..431.01 rows=3 width=12)
   Rows out:  5 rows with 4.332 ms to first row, 4.336 ms to end, start offset by 0.345 ms.
   ->  Gather Motion 2:1  (slice2; segments: 2)  (cost=0.00..431.01 rows=5 width=12)
         Rows out:  5 rows at destination with 4.331 ms to first row, 4.333 ms to end, start offset by 0.346 ms.
         ->  Limit  (cost=0.00..431.01 rows=3 width=12)
               Rows out:  Avg 5.0 rows x 2 workers.  Max 5 rows (seg0) with 3.101 ms to first row, 4.113 ms to end, start offset by 0.672 ms.
               ->  HashAggregate  (cost=0.00..431.01 rows=10 width=12)
                     Group By: d
                     Rows out:  Avg 5.0 rows x 2 workers.  Max 5 rows (seg0) with 3.101 ms to first row, 4.112 ms to end, start offset by 0.672 ms.
                     Executor memory:  6233K bytes avg, 6233K bytes max (seg0).
                     ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..431.01 rows=10 width=12)
                           Hash Key: d
                           Rows out:  Avg 10.0 rows x 2 workers at destination.  Max 10 rows (seg0) with 0.014 ms to first row, 0.019 ms to end, start offset by 2.654 ms.
                           ->  Result  (cost=0.00..431.01 rows=10 width=12)
                                 Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.204 ms to first row, 0.237 ms to end, start offset by 0.926 ms.
                                 ->  GroupAggregate  (cost=0.00..431.01 rows=10 width=12)
                                       Group By: d
                                       Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.202 ms to first row, 0.233 ms to end, start offset by 0.927 ms.
                                       ->  Sort  (cost=0.00..431.00 rows=50 width=4)
                                             Sort Key: d
                                             Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.194 ms to first row, 0.205 ms to end, start offset by 0.927 ms.
                                             Executor memory:  29K bytes avg, 29K bytes max (seg0).
                                             Work_mem used:  29K bytes avg, 29K bytes max (seg0). Workfile: (0 spilling, 0 reused)
                                             ->  Table Scan on smallt  (cost=0.00..431.00 rows=50 width=4)
                                                   Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.068 ms to first row, 0.085 ms to end, start offset by 0.993 ms.
 Slice statistics:
   (slice0)    Executor memory: 159K bytes.
   (slice1)    Executor memory: 195K bytes avg x 2 workers, 195K bytes max (seg0).  Work_mem: 29K bytes max.
   (slice2)    Executor memory: 6401K bytes avg x 2 workers, 6403K bytes max (seg0).
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_hashjoin=on; enable_nestloop=off; gp_enable_agg_distinct=on; optimizer=on; optimizer_segments=3
 Optimizer status: PQO version 1.611
 Total runtime: 5.973 ms
(34 rows)

-- HashJoin
select t1.* from smallt as t1, smallt as t2 where t1.i = t2.i;
 i |    t    |     d      
---+---------+------------
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
(1000 rows)

explain analyze select t1.* from smallt as t1, smallt as t2 where t1.i = t2.i;
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..862.09 rows=1000 width=15)
   Rows out:  1000 rows at destination with 8.074 ms to first row, 14 ms to end, start offset by 0.251 ms.
   ->  Hash Join  (cost=0.00..862.03 rows=500 width=15)
         Hash Cond: public.smallt.i = public.smallt.i
         Rows out:  Avg 500.0 rows x 2 workers.  Max 500 rows (seg0) with 6.926 ms to first row, 13 ms to end, start offset by 0.609 ms.
         Executor memory:  1K bytes avg, 1K bytes max (seg0).
         Work_mem used:  1K bytes avg, 1K bytes max (seg0). Workfile: (0 spilling, 0 reused)
         (seg0)   Hash chain length 10.0 avg, 10 max, using 5 of 1048589 buckets.
         ->  Table Scan on smallt  (cost=0.00..431.00 rows=50 width=15)
               Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.007 ms to first row, 0.019 ms to end, start offset by 7.525 ms.
         ->  Hash  (cost=431.00..431.00 rows=50 width=4)
               Rows in:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.092 ms to end, start offset by 7.432 ms.
               ->  Table Scan on smallt  (cost=0.00..431.00 rows=50 width=4)
                     Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.022 ms to first row, 0.056 ms to end, start offset by 7.433 ms.
 Slice statistics:
   (slice0)    Executor memory: 203K bytes.
   (slice1)    Executor memory: 12487K bytes avg x 2 workers, 12487K bytes max (seg0).  Work_mem: 1K bytes max.
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_hashjoin=on; enable_nestloop=off; gp_enable_agg_distinct=on; optimizer=on; optimizer_segments=3
 Optimizer status: PQO version 1.611
 Total runtime: 14.638 ms
(22 rows)

-- Rescan on HashJoin
--select t1.* from (select t11.* from smallt as t11, smallt as t22 where t11.i = t22.i and t11.i < 2) as t1,
--   (select t11.* from smallt as t11, smallt as t22 where t11.d = t22.d and t11.i < 5) as t2;
-- Material in SubPlan
select smallt2.* from smallt2
where i < (select count(*) from smallt where smallt.i = smallt2.i);
 i |   t    |     d      
---+--------+------------
 1 | text 1 | 01-02-2011
 3 | text 3 | 01-04-2011
 1 | text 6 | 01-07-2011
 3 | text 8 | 01-09-2011
 1 | text 1 | 01-12-2011
 3 | text 3 | 01-14-2011
 1 | text 6 | 01-02-2011
 3 | text 8 | 01-04-2011
 1 | text 1 | 01-07-2011
 3 | text 3 | 01-09-2011
 1 | text 6 | 01-12-2011
 3 | text 8 | 01-14-2011
 1 | text 1 | 01-02-2011
 3 | text 3 | 01-04-2011
 1 | text 6 | 01-07-2011
 3 | text 8 | 01-09-2011
 1 | text 1 | 01-12-2011
 3 | text 3 | 01-14-2011
 1 | text 6 | 01-02-2011
 3 | text 8 | 01-04-2011
 0 | text 0 | 01-01-2011
 2 | text 2 | 01-03-2011
 4 | text 4 | 01-05-2011
 0 | text 5 | 01-06-2011
 2 | text 7 | 01-08-2011
 4 | text 9 | 01-10-2011
 0 | text 0 | 01-11-2011
 2 | text 2 | 01-13-2011
 4 | text 4 | 01-15-2011
 0 | text 5 | 01-01-2011
 2 | text 7 | 01-03-2011
 4 | text 9 | 01-05-2011
 0 | text 0 | 01-06-2011
 2 | text 2 | 01-08-2011
 4 | text 4 | 01-10-2011
 0 | text 5 | 01-11-2011
 2 | text 7 | 01-13-2011
 4 | text 9 | 01-15-2011
 0 | text 0 | 01-01-2011
 2 | text 2 | 01-03-2011
 4 | text 4 | 01-05-2011
 0 | text 5 | 01-06-2011
 2 | text 7 | 01-08-2011
 4 | text 9 | 01-10-2011
 0 | text 0 | 01-11-2011
 2 | text 2 | 01-13-2011
 4 | text 4 | 01-15-2011
 0 | text 5 | 01-01-2011
 2 | text 7 | 01-03-2011
 4 | text 9 | 01-05-2011
(50 rows)

explain select smallt2.* from smallt2
where i < (select count(*) from smallt where smallt.i = smallt2.i);
                                                    QUERY PLAN                                                     
-------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..862.02 rows=50 width=15)
   ->  Result  (cost=0.00..862.01 rows=25 width=15)
         Filter: smallt2.i < COALESCE("ColRef_0021", 0::bigint)
         ->  Result  (cost=0.00..862.01 rows=25 width=24)
               ->  Hash Left Join  (cost=0.00..862.01 rows=25 width=23)
                     Hash Cond: smallt2.i = smallt.i
                     ->  Table Scan on smallt2  (cost=0.00..431.00 rows=25 width=15)
                     ->  Hash  (cost=431.01..431.01 rows=5 width=12)
                           ->  GroupAggregate  (cost=0.00..431.01 rows=5 width=12)
                                 Group By: smallt.i
                                 ->  Sort  (cost=0.00..431.00 rows=50 width=4)
                                       Sort Key: smallt.i
                                       ->  Table Scan on smallt  (cost=0.00..431.00 rows=50 width=4)
 Settings:  enable_hashjoin=on; enable_nestloop=off; gp_enable_agg_distinct=on; optimizer=on; optimizer_segments=3
 Optimizer status: PQO version 1.611
(15 rows)

-- Sort in MergeJoin
-- start_ignore
-- Known_opt_diff: OPT-3417. Missing feature: Sort Merge Join
-- end_ignore
set enable_hashjoin=off;
set enable_mergejoin=on;
select t1.* from smallt as t1, smallt as t2 where t1.i = t2.i and t1.i < 2;
 i |    t    |     d      
---+---------+------------
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
(200 rows)

explain analyze select t1.* from smallt as t1, smallt as t2 where t1.i = t2.i and t1.i < 2;
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..862.02 rows=200 width=15)
   Rows out:  200 rows at destination with 12 ms to first row, 13 ms to end, start offset by 0.411 ms.
   ->  Hash Join  (cost=0.00..862.01 rows=100 width=15)
         Hash Cond: public.smallt.i = public.smallt.i
         Rows out:  Avg 100.0 rows x 2 workers.  Max 100 rows (seg0) with 6.645 ms to first row, 12 ms to end, start offset by 0.803 ms.
         Executor memory:  1K bytes avg, 1K bytes max (seg0).
         Work_mem used:  1K bytes avg, 1K bytes max (seg0). Workfile: (0 spilling, 0 reused)
         (seg0)   Hash chain length 10.0 avg, 10 max, using 1 of 1048589 buckets.
         ->  Table Scan on smallt  (cost=0.00..431.00 rows=10 width=15)
               Filter: i < 2
               Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.010 ms to first row, 0.032 ms to end, start offset by 7.435 ms.
         ->  Hash  (cost=431.00..431.00 rows=10 width=4)
               Rows in:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.072 ms to end, start offset by 7.363 ms.
               ->  Table Scan on smallt  (cost=0.00..431.00 rows=10 width=4)
                     Filter: i < 2
                     Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.037 ms to first row, 0.061 ms to end, start offset by 7.364 ms.
 Slice statistics:
   (slice0)    Executor memory: 179K bytes.
   (slice1)    Executor memory: 12463K bytes avg x 2 workers, 12463K bytes max (seg0).  Work_mem: 1K bytes max.
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_hashjoin=off; enable_mergejoin=on; enable_nestloop=off; gp_enable_agg_distinct=on; optimizer=on; optimizer_segments=3
 Optimizer status: PQO version 1.611
 Total runtime: 13.660 ms
(24 rows)

select t1.* from smallt as t1, smallt as t2 where t1.d = t2.d and t1.i < 2;
 i |    t    |     d      
---+---------+------------
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
(100 rows)

--start_ignore
explain analyze select t1.* from smallt as t1, smallt as t2 where t1.d = t2.d and t1.i < 2;
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=0.00..862.02 rows=100 width=15)
   Rows out:  100 rows at destination with 11 ms to end, start offset by 0.362 ms.
   ->  Hash Join  (cost=0.00..862.01 rows=50 width=15)
         Hash Cond: public.smallt.d = public.smallt.d
         Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 5.749 ms to first row, 10 ms to end, start offset by 0.810 ms.
         Executor memory:  1K bytes avg, 1K bytes max (seg0).
         Work_mem used:  1K bytes avg, 1K bytes max (seg0). Workfile: (0 spilling, 0 reused)
         (seg0)   Hash chain length 5.0 avg, 5 max, using 10 of 1048589 buckets.
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..431.00 rows=10 width=15)
               Hash Key: public.smallt.d
               Rows out:  Avg 10.0 rows x 2 workers at destination.  Max 10 rows (seg0) with 0.025 ms to first row, 0.028 ms to end, start offset by 6.532 ms.
               ->  Table Scan on smallt  (cost=0.00..431.00 rows=10 width=15)
                     Filter: i < 2
                     Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.085 ms to first row, 0.100 ms to end, start offset by 1.072 ms.
         ->  Hash  (cost=431.00..431.00 rows=50 width=4)
               Rows in:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.093 ms to end, start offset by 6.438 ms.
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..431.00 rows=50 width=4)
                     Hash Key: public.smallt.d
                     Rows out:  Avg 50.0 rows x 2 workers at destination.  Max 50 rows (seg0) with 0.045 ms to first row, 0.070 ms to end, start offset by 6.438 ms.
                     ->  Table Scan on smallt  (cost=0.00..431.00 rows=50 width=4)
                           Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.096 ms to first row, 0.118 ms to end, start offset by 1.058 ms.
 Slice statistics:
   (slice0)    Executor memory: 163K bytes.
   (slice1)    Executor memory: 171K bytes avg x 2 workers, 171K bytes max (seg0).
   (slice2)    Executor memory: 171K bytes avg x 2 workers, 171K bytes max (seg0).
   (slice3)    Executor memory: 12475K bytes avg x 2 workers, 12475K bytes max (seg0).  Work_mem: 1K bytes max.
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_hashjoin=off; enable_mergejoin=on; enable_nestloop=off; gp_enable_agg_distinct=on; optimizer=on; optimizer_segments=3
 Optimizer status: PQO version 1.611
 Total runtime: 11.496 ms
(31 rows)

--end_ignore
set enable_hashjoin=on;
set enable_mergejoin=off;
-- ShareInputScan
--with my_group_max(i, maximum) as (select i, max(d) from smallt group by i)
--select smallt2.* from my_group_max, smallt2 where my_group_max.i = smallt2.i
--and smallt2.i < any (select maximum from my_group_max);
--explain analyze with my_group_max(i, maximum) as (select i, max(d) from smallt group by i)
--select smallt2.* from my_group_max, smallt2 where my_group_max.i = smallt2.i
--and smallt2.i < any (select maximum from my_group_max);
-- IndexScan
create index smallt_d_idx on smallt (d);
create index smallt2_d_idx on smallt2 (d);
-- start_ignore
-- Known_opt_diff: This test is only here for the planner. It doesn't exercise eagerfree in ORCA plans
-- end_ignore
set enable_hashjoin=off;
set enable_nestloop=on;
set enable_seqscan=off;
set enable_bitmapscan=off;
select smallt.* from smallt, smallt2 where smallt.i = smallt2.i and smallt2.d = '2011-01-04'::date
and smallt.d = '2011-01-04'::date;
 i |    t    |     d      
---+---------+------------
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
(20 rows)

explain analyze select smallt.* from smallt, smallt2 where smallt.i = smallt2.i and smallt2.d = '2011-01-04'::date
and smallt.d = '2011-01-04'::date;
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..17.99 rows=2 width=15)
   Rows out:  20 rows at destination with 10 ms to end, start offset by 0.302 ms.
   ->  Hash Join  (cost=0.00..17.99 rows=1 width=15)
         Hash Cond: smallt.i = smallt2.i
         Rows out:  20 rows (seg0) with 5.526 ms to first row, 9.606 ms to end, start offset by 0.621 ms.
         Executor memory:  1K bytes.
         Work_mem used:  1K bytes. Workfile: (0 spilling, 0 reused)
         (seg0)   Hash chain length 4.0 avg, 4 max, using 1 of 1048589 buckets.
         ->  Index Scan using smallt_d_idx on smallt  (cost=0.00..9.99 rows=3 width=15)
               Index Cond: d = '01-04-2011'::date
               Rows out:  5 rows (seg0) with 0.015 ms to first row, 0.027 ms to end, start offset by 6.127 ms.
         ->  Hash  (cost=8.00..8.00 rows=2 width=4)
               Rows in:  4 rows (seg0) with 0.061 ms to end, start offset by 6.065 ms.
               ->  Index Scan using smallt2_d_idx on smallt2  (cost=0.00..8.00 rows=2 width=4)
                     Index Cond: d = '01-04-2011'::date
                     Rows out:  4 rows (seg0) with 0.031 ms to first row, 0.054 ms to end, start offset by 6.066 ms.
 Slice statistics:
   (slice0)    Executor memory: 159K bytes.
   (slice1)    Executor memory: 12487K bytes avg x 2 workers, 12487K bytes max (seg0).  Work_mem: 1K bytes max.
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_bitmapscan=off; enable_hashjoin=off; enable_mergejoin=off; enable_nestloop=on; enable_seqscan=off; gp_enable_agg_distinct=on; optimizer=on; optimizer_segments=3
 Optimizer status: PQO version 1.611
 Total runtime: 10.840 ms
(24 rows)

-- BitmapScan
-- start_ignore
-- Known_opt_diff: This test is only here for the planner. It doesn't exercise eagerfree in ORCA plans
-- end_ignore
set enable_indexscan=off;
set enable_bitmapscan=on;
select smallt.* from smallt, smallt2 where smallt.i = smallt2.i and smallt2.d = '2011-01-04'::date
and smallt.d = '2011-01-04'::date;
 i |    t    |     d      
---+---------+------------
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
(20 rows)

explain analyze select smallt.* from smallt, smallt2 where smallt.i = smallt2.i and smallt2.d = '2011-01-04'::date
and smallt.d = '2011-01-04'::date;
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..17.99 rows=2 width=15)
   Rows out:  20 rows at destination with 10 ms to end, start offset by 0.281 ms.
   ->  Hash Join  (cost=0.00..17.99 rows=1 width=15)
         Hash Cond: smallt.i = smallt2.i
         Rows out:  20 rows (seg0) with 5.606 ms to first row, 9.616 ms to end, start offset by 0.662 ms.
         Executor memory:  1K bytes.
         Work_mem used:  1K bytes. Workfile: (0 spilling, 0 reused)
         (seg0)   Hash chain length 4.0 avg, 4 max, using 1 of 1048589 buckets.
         ->  Index Scan using smallt_d_idx on smallt  (cost=0.00..9.99 rows=3 width=15)
               Index Cond: d = '01-04-2011'::date
               Rows out:  5 rows (seg0) with 0.007 ms to first row, 0.013 ms to end, start offset by 6.257 ms.
         ->  Hash  (cost=8.00..8.00 rows=2 width=4)
               Rows in:  4 rows (seg0) with 0.036 ms to end, start offset by 6.220 ms.
               ->  Index Scan using smallt2_d_idx on smallt2  (cost=0.00..8.00 rows=2 width=4)
                     Index Cond: d = '01-04-2011'::date
                     Rows out:  4 rows (seg0) with 0.023 ms to first row, 0.030 ms to end, start offset by 6.221 ms.
 Slice statistics:
   (slice0)    Executor memory: 159K bytes.
   (slice1)    Executor memory: 12487K bytes avg x 2 workers, 12487K bytes max (seg0).  Work_mem: 1K bytes max.
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_bitmapscan=on; enable_hashjoin=off; enable_indexscan=off; enable_mergejoin=off; enable_nestloop=on; enable_seqscan=off; gp_enable_agg_distinct=on; optimizer=on; optimizer_segments=3
 Optimizer status: PQO version 1.611
 Total runtime: 10.903 ms
(24 rows)

set enable_hashjoin=on;
set enable_nestloop=off;
set enable_seqscan=on;
set enable_indexscan=on;
-- SubPlan
with my_group_sum(d, total) as (select d, sum(i) from smallt group by d)
select smallt2.* from smallt2
where i < all (select total from my_group_sum, smallt, smallt2 as tmp where my_group_sum.d = smallt.d and smallt.d = tmp.d and my_group_sum.d = smallt2.d)
and i = 0 order by 1,2,3; --order 1,2,3
 i |   t    |     d      
---+--------+------------
 0 | text 0 | 01-06-2011
 0 | text 5 | 01-06-2011
 0 | text 5 | 01-06-2011
(3 rows)

select smallt2.* from smallt2
where i < all (select total from (select d, sum(i) as total from smallt group by d) as my_group_sum, smallt, smallt2 as tmp
    where my_group_sum.d = smallt.d and smallt.d = tmp.d and my_group_sum.d = smallt2.d)
and i = 0 order by 1,2,3; --order 1,2,3
 i |   t    |     d      
---+--------+------------
 0 | text 0 | 01-06-2011
 0 | text 5 | 01-06-2011
 0 | text 5 | 01-06-2011
(3 rows)

-- Nested Subplan
drop table if exists eager_free_r;
NOTICE:  table "eager_free_r" does not exist, skipping
drop table if exists eager_free_s;
NOTICE:  table "eager_free_s" does not exist, skipping
drop table if exists eager_free_t;
NOTICE:  table "eager_free_t" does not exist, skipping
create table eager_free_r (r1 int, r2 int, r3 int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'r1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create table eager_free_s (s1 int, s2 int, s3 int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 's1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create table eager_free_t (t1 int, t2 int, t3 int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 't1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into eager_free_r select generate_series(1, 20), generate_series(1, 5), generate_series(1, 8);
insert into eager_free_s select generate_series(1, 20), generate_series(6, 10), generate_series(1, 4);
insert into eager_free_t select generate_series(1, 30), generate_series(1, 6), generate_series(1, 5);
select * from eager_free_t where t1 > (select min(r1) from eager_free_r where r2<t2 and r3 > (Select min(s3) from eager_free_s where s1<r1));
 t1 | t2 | t3 
----+----+----
  3 |  3 |  3
  5 |  5 |  5
  9 |  3 |  4
 11 |  5 |  1
 15 |  3 |  5
 17 |  5 |  2
 21 |  3 |  1
 23 |  5 |  3
 27 |  3 |  2
 29 |  5 |  4
  4 |  4 |  4
  6 |  6 |  1
  8 |  2 |  3
 10 |  4 |  5
 12 |  6 |  2
 14 |  2 |  4
 16 |  4 |  1
 18 |  6 |  3
 20 |  2 |  5
 22 |  4 |  2
 24 |  6 |  4
 26 |  2 |  1
 28 |  4 |  3
 30 |  6 |  5
(24 rows)

reset optimizer_segments;
